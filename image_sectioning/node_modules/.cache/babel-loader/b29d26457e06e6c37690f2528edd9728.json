{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chenr\\\\Desktop\\\\11278group28\\\\image_sectioning\\\\src\\\\components\\\\uploadFile.js\";\nimport React, { Component } from 'react';\nimport { useEffect } from 'react'; // Process should go like this: uploadFile is pressed, image and its attached JSON file\n// is sent to backend. (Image as a BLOB?)\n// Page is refreshed to clear image and section info.\n// Then, message saying \"upload successful!\" if it worked.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UploadFile extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.handleFileUpload = _s(async () => {\n      _s();\n\n      var sectionData = JSON.parse(sessionStorage.getItem('sectionInfo'));\n      console.log(sectionData);\n      useEffect(() => {\n        fetch(\"/send_data\", {\n          method: \"POST\",\n          headers: {\n            'Content-type': \"application/json\"\n          },\n          body: JSON.stringify(sectionData)\n        }).then(res => res.json()).then(data => console.log(data));\n      }, []); //console.log(response)\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayTable\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"uploadFile\",\n        onClick: () => {\n          this.handleFileUpload();\n        },\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UploadFile;","map":{"version":3,"sources":["C:/Users/chenr/Desktop/11278group28/image_sectioning/src/components/uploadFile.js"],"names":["React","Component","useEffect","UploadFile","handleFileUpload","sectionData","JSON","parse","sessionStorage","getItem","console","log","fetch","method","headers","body","stringify","then","res","json","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,OAAxB,C,CAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;;AAAA;AAAA,SAE/BG,gBAF+B,MAEZ,YAAY;AAAA;;AAC3B,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAEAH,MAAAA,SAAS,CAAC,MAAM;AACZU,QAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,UAAAA,MAAM,EAAE,MADQ;AAEhBC,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WAFO;AAGhBC,UAAAA,IAAI,EAAET,IAAI,CAACU,SAAL,CAAeX,WAAf;AAHU,SAAf,CAAL,CAKCY,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMMG,IAAI,IAAIV,OAAO,CAACC,GAAR,CAAYS,IAAZ,CANd;AAOH,OARQ,EAQN,EARM,CAAT,CAJ2B,CAc3B;AACH,KAjB8B;AAAA;;AAkB/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKjB,gBAAL;AAAwB,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAxB8B;;AA2BnC,eAAeD,UAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport {useEffect} from 'react'\r\n\r\n// Process should go like this: uploadFile is pressed, image and its attached JSON file\r\n// is sent to backend. (Image as a BLOB?)\r\n// Page is refreshed to clear image and section info.\r\n// Then, message saying \"upload successful!\" if it worked.\r\n\r\nclass UploadFile extends Component {\r\n\r\n    handleFileUpload = async () => {\r\n        var sectionData = JSON.parse(sessionStorage.getItem('sectionInfo'));\r\n        console.log(sectionData);\r\n        \r\n        useEffect(() => {\r\n            fetch(\"/send_data\", {\r\n                method: \"POST\",\r\n                headers: {'Content-type': \"application/json\"},\r\n                body: JSON.stringify(sectionData)\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n        }, [])\r\n                                                       \r\n        //console.log(response)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"displayTable\">\r\n                <button className='uploadFile' onClick={() => {this.handleFileUpload()}}>Upload File</button>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default UploadFile"]},"metadata":{},"sourceType":"module"}