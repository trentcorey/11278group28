{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chenr\\\\Desktop\\\\11278group28\\\\image_sectioning\\\\src\\\\components\\\\cropper.js\",\n    _s = $RefreshSig$();\n\nimport ReactCrop from 'react-image-crop';\nimport React, { useState } from 'react';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport DisplayTable from './displaytable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cropper = () => {\n  _s();\n\n  const [src, selectFile] = useState(null);\n  const [image, setImage] = useState(null);\n  const [crop, setCrop] = useState(null);\n  const [infoDisplayed, setInfoDisplayed] = useState(0);\n\n  const handleFileChange = e => {\n    selectFile(URL.createObjectURL(e.target.files[0]));\n    var clearData = [];\n    sessionStorage.setItem('sectionInfo', JSON.stringify(clearData));\n  };\n\n  function saveSection(class_menu) {\n    var class_id = parseInt(document.getElementById(class_menu).value);\n    var sectionData = {\n      'SectionID': 0,\n      'x_min': crop.x,\n      'y_min': crop.y,\n      'x_max': crop.x + crop.width,\n      'y_max': crop.y + crop.height,\n      'class_id': class_id\n    };\n    var preExistingData = JSON.parse(sessionStorage.getItem('sectionInfo'));\n\n    if (preExistingData == null) {\n      preExistingData = [];\n    }\n\n    sectionData.SectionID = JSON.parse(sessionStorage.getItem('sectionInfo').length);\n    preExistingData.push(sectionData); // Put the object into storage\n\n    sessionStorage.setItem('sectionInfo', JSON.stringify(preExistingData)); // Force the table to update\n\n    setFileDisplayed(1 + FileDisplayed);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), src && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(ReactCrop, {\n          src: src,\n          onImageLoaded: setImage,\n          crop: crop,\n          onChange: setCrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"classification\",\n      children: \"What's in the section?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"classification\",\n      id: \"classification\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"0\",\n        children: \"Red Apple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"Green Apple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        children: \"Pear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"Orange\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"4\",\n        children: \"Red Grape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"5\",\n        children: \"Green Grape\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"6\",\n        children: \"Banana\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save_Section\",\n      onClick: () => {\n        saveSection('classification');\n      },\n      children: \"Save Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DisplayTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cropper, \"dKyMZTTdVqGQKFqrxKUZMxQp5CE=\");\n\n_c = Cropper;\nexport default Cropper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cropper\");","map":{"version":3,"sources":["C:/Users/chenr/Desktop/11278group28/image_sectioning/src/components/cropper.js"],"names":["ReactCrop","React","useState","DisplayTable","Cropper","src","selectFile","image","setImage","crop","setCrop","infoDisplayed","setInfoDisplayed","handleFileChange","e","URL","createObjectURL","target","files","clearData","sessionStorage","setItem","JSON","stringify","saveSection","class_menu","class_id","parseInt","document","getElementById","value","sectionData","x","y","width","height","preExistingData","parse","getItem","SectionID","length","push","setFileDisplayed","FileDisplayed"],"mappings":"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","sourcesContent":["import ReactCrop from 'react-image-crop';\r\nimport React, { useState } from 'react'\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport DisplayTable from './displaytable';\r\n\r\nconst Cropper = () => {\r\n    const [src, selectFile] = useState(null);\r\n    const [image, setImage] = useState(null)\r\n    const [crop, setCrop] = useState(null);\r\n    const [infoDisplayed, setInfoDisplayed] = useState(0);\r\n\r\n\r\n    const handleFileChange = e => {\r\n        selectFile(URL.createObjectURL(e.target.files[0]))\r\n\r\n        var clearData = [];\r\n        sessionStorage.setItem('sectionInfo', JSON.stringify(clearData));\r\n    };\r\n\r\n \r\n\r\n    function saveSection(class_menu) {\r\n        var class_id = parseInt((document.getElementById(class_menu)).value);\r\n        \r\n        var sectionData = {'SectionID': 0, 'x_min': crop.x, 'y_min': crop.y, \r\n                        'x_max': crop.x + crop.width, 'y_max': crop.y + crop.height, 'class_id': class_id}\r\n\r\n        var preExistingData = JSON.parse(sessionStorage.getItem('sectionInfo'))\r\n        if (preExistingData == null) {\r\n            preExistingData = [];\r\n        }\r\n\r\n        sectionData.SectionID = JSON.parse(sessionStorage.getItem('sectionInfo').length)\r\n        preExistingData.push(sectionData);\r\n        \r\n        // Put the object into storage\r\n        sessionStorage.setItem('sectionInfo', JSON.stringify(preExistingData));\r\n\r\n        // Force the table to update\r\n        setFileDisplayed(1 + FileDisplayed)\r\n    }\r\n    \r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-6'>\r\n                    <input type='file' accept='image/*' onChange={handleFileChange} />\r\n                </div>\r\n                \r\n                {src && <div className='col-6'>\r\n                    <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={setCrop} />\r\n                </div>}\r\n            </div>\r\n\r\n            <label htmlFor=\"classification\">What's in the section?</label>\r\n            <select name =\"classification\" id=\"classification\">\r\n                <option value=\"0\">Red Apple</option>\r\n                <option value=\"1\">Green Apple</option>\r\n                <option value=\"2\">Pear</option>\r\n                <option value=\"3\">Orange</option>\r\n                <option value=\"4\">Red Grape</option>\r\n                <option value=\"5\">Green Grape</option>\r\n                <option value=\"6\">Banana</option>\r\n            </select>\r\n            <button className='save_Section' onClick={() => {saveSection('classification')}}>Save Section</button>\r\n            <DisplayTable />\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Cropper\r\n"]},"metadata":{},"sourceType":"module"}