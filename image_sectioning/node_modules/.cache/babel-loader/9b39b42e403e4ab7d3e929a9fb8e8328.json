{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chenr\\\\Desktop\\\\11278group28\\\\image_sectioning\\\\src\\\\components\\\\cropper.js\",\n    _s = $RefreshSig$();\n\nimport ReactCrop from 'react-image-crop';\nimport React, { useState } from 'react';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport DisplayTable from './displaytable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cropper = () => {\n  _s();\n\n  const [src, selectFile] = useState(null);\n  const [image, setImage] = useState(null);\n  const [crop, setCrop] = useState(null);\n  const [infoDisplayed, setInfoDisplayed] = useState(0);\n\n  const handleFileChange = e => {\n    selectFile(URL.createObjectURL(e.target.files[0]));\n    var clearData = [];\n    sessionStorage.setItem('sectionInfo', JSON.stringify(clearData));\n    setInfoDisplayed(0);\n    console.log(image);\n  };\n\n  function saveSection(class_menu) {\n    var class_id = parseInt(document.getElementById(class_menu).value);\n    var sectionData = {\n      'SectionID': 0,\n      'x_min': crop.x,\n      'y_min': crop.y,\n      'x_max': crop.x + crop.width,\n      'y_max': crop.y + crop.height,\n      'class_id': class_id\n    };\n    var preExistingData = JSON.parse(sessionStorage.getItem('sectionInfo'));\n\n    if (preExistingData == null) {\n      preExistingData = [];\n    } // Also doubles as a counter. Two birds with one stone!\n\n\n    sectionData.SectionID = preExistingData.length;\n    preExistingData.push(sectionData); // Put the object into storage\n\n    sessionStorage.setItem('sectionInfo', JSON.stringify(preExistingData)); // Force the table to update\n\n    setInfoDisplayed(preExistingData.length);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/jpeg\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), src && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(ReactCrop, {\n          src: src,\n          onImageLoaded: setImage,\n          crop: crop,\n          onChange: setCrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), src && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"classification\",\n        children: \"What's in the section?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"classification\",\n        id: \"classification\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"Red Apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Green Apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Pear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"Orange\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"Red Grape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"Green Grape\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"6\",\n          children: \"Banana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), src && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save_Section\",\n      onClick: () => {\n        saveSection('classification');\n      },\n      children: \"Save Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), src && /*#__PURE__*/_jsxDEV(DisplayTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cropper, \"dKyMZTTdVqGQKFqrxKUZMxQp5CE=\");\n\n_c = Cropper;\nexport default Cropper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cropper\");","map":{"version":3,"sources":["C:/Users/chenr/Desktop/11278group28/image_sectioning/src/components/cropper.js"],"names":["ReactCrop","React","useState","DisplayTable","Cropper","src","selectFile","image","setImage","crop","setCrop","infoDisplayed","setInfoDisplayed","handleFileChange","e","URL","createObjectURL","target","files","clearData","sessionStorage","setItem","JSON","stringify","console","log","saveSection","class_menu","class_id","parseInt","document","getElementById","value","sectionData","x","y","width","height","preExistingData","parse","getItem","SectionID","length","push"],"mappings":"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","sourcesContent":["import ReactCrop from 'react-image-crop';\r\nimport React, { useState } from 'react'\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport DisplayTable from './displaytable';\r\n\r\n\r\nconst Cropper = () => {\r\n    const [src, selectFile] = useState(null);\r\n    const [image, setImage] = useState(null)\r\n    const [crop, setCrop] = useState(null);\r\n    const [infoDisplayed, setInfoDisplayed] = useState(0);\r\n    \r\n\r\n    const handleFileChange = e => {\r\n        selectFile(URL.createObjectURL(e.target.files[0]))\r\n        var clearData = [];\r\n        sessionStorage.setItem('sectionInfo', JSON.stringify(clearData));\r\n        setInfoDisplayed(0);\r\n        console.log(image);\r\n    };\r\n\r\n    function saveSection(class_menu) {\r\n        var class_id = parseInt((document.getElementById(class_menu)).value);\r\n        \r\n        var sectionData = {'SectionID': 0, 'x_min': crop.x, 'y_min': crop.y, \r\n                        'x_max': crop.x + crop.width, 'y_max': crop.y + crop.height, 'class_id': class_id}\r\n\r\n        var preExistingData = JSON.parse(sessionStorage.getItem('sectionInfo'))\r\n        if (preExistingData == null) {\r\n            preExistingData = [];\r\n        }\r\n\r\n        // Also doubles as a counter. Two birds with one stone!\r\n        sectionData.SectionID = preExistingData.length;\r\n        preExistingData.push(sectionData);\r\n        \r\n        // Put the object into storage\r\n        sessionStorage.setItem('sectionInfo', JSON.stringify(preExistingData));\r\n\r\n        // Force the table to update\r\n        setInfoDisplayed(preExistingData.length)\r\n    }\r\n    \r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-6'>\r\n                    <input type='file' accept='image/jpeg' onChange={handleFileChange} />\r\n                </div>\r\n                \r\n                {src && <div className='col-6'>\r\n                    <ReactCrop src={src} onImageLoaded={setImage} crop={crop} onChange={setCrop} />\r\n                    \r\n                </div>}\r\n            </div>\r\n            {src && <div> \r\n                <label htmlFor=\"classification\">What's in the section?</label>\r\n                <select name =\"classification\" id=\"classification\">\r\n                    <option value=\"0\">Red Apple</option>\r\n                    <option value=\"1\">Green Apple</option>\r\n                    <option value=\"2\">Pear</option>\r\n                    <option value=\"3\">Orange</option>\r\n                    <option value=\"4\">Red Grape</option>\r\n                    <option value=\"5\">Green Grape</option>\r\n                    <option value=\"6\">Banana</option>\r\n                </select>\r\n                </div>}\r\n            \r\n            {src && <button className='save_Section' onClick={() => {saveSection('classification')}}>Save Section</button>}\r\n            {src && <DisplayTable />}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Cropper\r\n"]},"metadata":{},"sourceType":"module"}